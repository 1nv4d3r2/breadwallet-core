/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ResponseCode.proto */

#ifndef PROTOBUF_C_ResponseCode_2eproto__INCLUDED
#define PROTOBUF_C_ResponseCode_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif




/* --- enums --- */

typedef enum _Proto__ResponseCodeEnum {
  /*
   * The transaction passed the precheck validations.
   */
  PROTO__RESPONSE_CODE_ENUM__OK = 0,
  /*
   * For any error not handled by specific error codes listed below.
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_TRANSACTION = 1,
  /*
   *Payer account does not exist.
   */
  PROTO__RESPONSE_CODE_ENUM__PAYER_ACCOUNT_NOT_FOUND = 2,
  /*
   *Node Account provided does not match the node account of the node the transaction was submitted to.
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_NODE_ACCOUNT = 3,
  /*
   * Pre-Check error when TransactionValidStart + transactionValidDuration is less than current consensus time.
   */
  PROTO__RESPONSE_CODE_ENUM__TRANSACTION_EXPIRED = 4,
  /*
   * Transaction start time is greater than current consensus time
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_TRANSACTION_START = 5,
  /*
   *valid transaction duration is a positive non zero number that does not exceed 120 seconds
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_TRANSACTION_DURATION = 6,
  /*
   * The transaction signature is not valid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SIGNATURE = 7,
  /*
   *Transaction memo size exceeded 100 bytes
   */
  PROTO__RESPONSE_CODE_ENUM__MEMO_TOO_LONG = 8,
  /*
   * The fee provided in the transaction is insufficient for this type of transaction
   */
  PROTO__RESPONSE_CODE_ENUM__INSUFFICIENT_TX_FEE = 9,
  /*
   * The payer account has insufficient cryptocurrency to pay the transaction fee
   */
  PROTO__RESPONSE_CODE_ENUM__INSUFFICIENT_PAYER_BALANCE = 10,
  /*
   * This transaction ID is a duplicate of one that was submitted to this node or reached consensus in the last 180 seconds (receipt period)
   */
  PROTO__RESPONSE_CODE_ENUM__DUPLICATE_TRANSACTION = 11,
  /*
   *If API is throttled out
   */
  PROTO__RESPONSE_CODE_ENUM__BUSY = 12,
  /*
   *The API is not currently supported
   */
  PROTO__RESPONSE_CODE_ENUM__NOT_SUPPORTED = 13,
  /*
   *The file id is invalid or does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_FILE_ID = 14,
  /*
   *The account id is invalid or does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_ACCOUNT_ID = 15,
  /*
   *The contract id is invalid or does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_CONTRACT_ID = 16,
  /*
   *Transaction id is not valid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_TRANSACTION_ID = 17,
  /*
   *Receipt for given transaction id does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__RECEIPT_NOT_FOUND = 18,
  /*
   *Record for given transaction id does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__RECORD_NOT_FOUND = 19,
  /*
   *The solidity id is invalid or entity with this solidity id does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SOLIDITY_ID = 20,
  /*
   * Transaction hasn't yet reached consensus, or has already expired
   */
  PROTO__RESPONSE_CODE_ENUM__UNKNOWN = 21,
  /*
   * The transaction succeeded
   */
  PROTO__RESPONSE_CODE_ENUM__SUCCESS = 22,
  /*
   * There was a system error and the transaction failed because of invalid request parameters.
   */
  PROTO__RESPONSE_CODE_ENUM__FAIL_INVALID = 23,
  /*
   * There was a system error while performing fee calculation, reserved for future.
   */
  PROTO__RESPONSE_CODE_ENUM__FAIL_FEE = 24,
  /*
   * There was a system error while performing balance checks, reserved for future.
   */
  PROTO__RESPONSE_CODE_ENUM__FAIL_BALANCE = 25,
  /*
   *Key not provided in the transaction body
   */
  PROTO__RESPONSE_CODE_ENUM__KEY_REQUIRED = 26,
  /*
   *Unsupported algorithm/encoding used for keys in the transaction
   */
  PROTO__RESPONSE_CODE_ENUM__BAD_ENCODING = 27,
  /*
   *When the account balance is not sufficient for the transfer
   */
  PROTO__RESPONSE_CODE_ENUM__INSUFFICIENT_ACCOUNT_BALANCE = 28,
  /*
   *During an update transaction when the system is not able to find the Users Solidity address
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SOLIDITY_ADDRESS = 29,
  /*
   *Not enough gas was supplied to execute transaction
   */
  PROTO__RESPONSE_CODE_ENUM__INSUFFICIENT_GAS = 30,
  /*
   *contract byte code size is over the limit
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_SIZE_LIMIT_EXCEEDED = 31,
  /*
   *local execution (query) is requested for a function which changes state
   */
  PROTO__RESPONSE_CODE_ENUM__LOCAL_CALL_MODIFICATION_EXCEPTION = 32,
  /*
   *Contract REVERT OPCODE executed
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_REVERT_EXECUTED = 33,
  /*
   *For any contract execution related error not handled by specific error codes listed above.
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_EXECUTION_EXCEPTION = 34,
  /*
   *In Query validation, account with +ve(amount) value should be Receiving node account, the receiver account should be only one account in the list
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_RECEIVING_NODE_ACCOUNT = 35,
  /*
   * Header is missing in Query request
   */
  PROTO__RESPONSE_CODE_ENUM__MISSING_QUERY_HEADER = 36,
  /*
   * The update of the account failed
   */
  PROTO__RESPONSE_CODE_ENUM__ACCOUNT_UPDATE_FAILED = 37,
  /*
   * Provided key encoding was not supported by the system
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_KEY_ENCODING = 38,
  /*
   * null solidity address
   */
  PROTO__RESPONSE_CODE_ENUM__NULL_SOLIDITY_ADDRESS = 39,
  /*
   * update of the contract failed
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_UPDATE_FAILED = 40,
  /*
   * the query header is invalid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_QUERY_HEADER = 41,
  /*
   * Invalid fee submitted
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_FEE_SUBMITTED = 42,
  /*
   * Payer signature is invalid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_PAYER_SIGNATURE = 43,
  /*
   * The keys were not provided in the request.
   */
  PROTO__RESPONSE_CODE_ENUM__KEY_NOT_PROVIDED = 44,
  /*
   * Expiration time provided in the transaction was invalid.
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_EXPIRATION_TIME = 45,
  /*
   *WriteAccess Control Keys are not provided for the file
   */
  PROTO__RESPONSE_CODE_ENUM__NO_WACL_KEY = 46,
  /*
   *The contents of file are provided as empty.
   */
  PROTO__RESPONSE_CODE_ENUM__FILE_CONTENT_EMPTY = 47,
  /*
   * The crypto transfer credit and debit do not sum equal to 0
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_ACCOUNT_AMOUNTS = 48,
  /*
   * Transaction body provided is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_TRANSACTION_BODY = 49,
  /*
   * Invalid transaction body provided
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_TRANSACTION_BODY = 50,
  /*
   * the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SIGNATURE_TYPE_MISMATCHING_KEY = 51,
  /*
   * the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList, or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding signatureList should also have 3 base signatures.
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SIGNATURE_COUNT_MISMATCHING_KEY = 52,
  /*
   * the claim body is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_CLAIM_BODY = 53,
  /*
   *the hash for the claim is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_CLAIM_HASH = 54,
  /*
   * the key list is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_CLAIM_KEYS = 55,
  /*
   * the size of the claim hash is not 48 bytes
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_CLAIM_HASH_SIZE = 56,
  /*
   * the query body is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_QUERY_BODY = 57,
  /*
   * the crypto claim query is empty
   */
  PROTO__RESPONSE_CODE_ENUM__EMPTY_CLAIM_QUERY = 58,
  /*
   * the crypto claim doesn't exists in the file system. It expired or was never persisted.
   */
  PROTO__RESPONSE_CODE_ENUM__CLAIM_NOT_FOUND = 59,
  /*
   * the account id passed has not yet been created.
   */
  PROTO__RESPONSE_CODE_ENUM__ACCOUNT_ID_DOES_NOT_EXIST = 60,
  /*
   * the claim hash already exists
   */
  PROTO__RESPONSE_CODE_ENUM__CLAIM_ALREADY_EXISTS = 61,
  /*
   * File WACL keys are invalid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_FILE_WACL = 62,
  /*
   * Serialization failure
   */
  PROTO__RESPONSE_CODE_ENUM__SERIALIZATION_FAILED = 63,
  /*
   * The size of the Transaction is greater than transactionMaxBytes
   */
  PROTO__RESPONSE_CODE_ENUM__TRANSACTION_OVERSIZE = 64,
  /*
   * The Transaction has more than 50 levels
   */
  PROTO__RESPONSE_CODE_ENUM__TRANSACTION_TOO_MANY_LAYERS = 65,
  /*
   *Contract is marked as deleted
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_DELETED = 66,
  /*
   * the platform node is either disconnected or lagging behind.
   */
  PROTO__RESPONSE_CODE_ENUM__PLATFORM_NOT_ACTIVE = 67,
  /*
   * one public key matches more than one prefixes on the signature map
   */
  PROTO__RESPONSE_CODE_ENUM__KEY_PREFIX_MISMATCH = 68,
  /*
   * transaction not created by platform due to either large backlog or message size exceeded transactionMaxBytes
   */
  PROTO__RESPONSE_CODE_ENUM__PLATFORM_TRANSACTION_NOT_CREATED = 69,
  /*
   * auto renewal period is not a positive number of seconds
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_RENEWAL_PERIOD = 70,
  /*
   * the response code when a smart contract id is passed for a crypto API request
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_PAYER_ACCOUNT_ID = 71,
  /*
   * the account has been marked as deleted
   */
  PROTO__RESPONSE_CODE_ENUM__ACCOUNT_DELETED = 72,
  /*
   * the file has been marked as deleted
   */
  PROTO__RESPONSE_CODE_ENUM__FILE_DELETED = 73,
  /*
   * same accounts repeated in the transfer account list
   */
  PROTO__RESPONSE_CODE_ENUM__ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS = 74,
  /*
   * attempting to set negative balance value for crypto account
   */
  PROTO__RESPONSE_CODE_ENUM__SETTING_NEGATIVE_ACCOUNT_BALANCE = 75,
  /*
   * when deleting smart contract that has crypto balance either transfer account or transfer smart contract is required
   */
  PROTO__RESPONSE_CODE_ENUM__OBTAINER_REQUIRED = 76,
  /*
   *when deleting smart contract that has crypto balance you can not use the same contract id as transferContractId as the one being deleted
   */
  PROTO__RESPONSE_CODE_ENUM__OBTAINER_SAME_CONTRACT_ID = 77,
  /*
   *transferAccountId or transferContractId specified for contract delete does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__OBTAINER_DOES_NOT_EXIST = 78,
  /*
   *attempting to modify (update or delete a immutable smart contract, i.e. one created without a admin key)
   */
  PROTO__RESPONSE_CODE_ENUM__MODIFYING_IMMUTABLE_CONTRACT = 79,
  /*
   *Unexpected exception thrown by file system functions
   */
  PROTO__RESPONSE_CODE_ENUM__FILE_SYSTEM_EXCEPTION = 80,
  /*
   * the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]
   */
  PROTO__RESPONSE_CODE_ENUM__AUTORENEW_DURATION_NOT_IN_RANGE = 81,
  /*
   * Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex string.
   */
  PROTO__RESPONSE_CODE_ENUM__ERROR_DECODING_BYTESTRING = 82,
  /*
   * File to create a smart contract was of length zero
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_FILE_EMPTY = 83,
  /*
   * Bytecode for smart contract is of length zero
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_BYTECODE_EMPTY = 84,
  /*
   * Attempt to set negative initial balance
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_INITIAL_BALANCE = 85,
  /*
   * attempt to set negative receive record threshold
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_RECEIVE_RECORD_THRESHOLD = 86,
  /*
   * attempt to set negative send record threshold
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_SEND_RECORD_THRESHOLD = 87,
  /*
   * Special Account Operations should be performed by only Genesis account, return this code if it is not Genesis Account
   */
  PROTO__RESPONSE_CODE_ENUM__ACCOUNT_IS_NOT_GENESIS_ACCOUNT = 88,
  /*
   * The fee payer account doesn't have permission to submit such Transaction
   */
  PROTO__RESPONSE_CODE_ENUM__PAYER_ACCOUNT_UNAUTHORIZED = 89,
  /*
   * FreezeTransactionBody is invalid
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_FREEZE_TRANSACTION_BODY = 90,
  /*
   * FreezeTransactionBody does not exist
   */
  PROTO__RESPONSE_CODE_ENUM__FREEZE_TRANSACTION_BODY_NOT_FOUND = 91,
  /*
   *Exceeded the number of accounts (both from and to) allowed for crypto transfer list
   */
  PROTO__RESPONSE_CODE_ENUM__TRANSFER_LIST_SIZE_LIMIT_EXCEEDED = 92,
  /*
   * Smart contract result size greater than specified maxResultSize
   */
  PROTO__RESPONSE_CODE_ENUM__RESULT_SIZE_LIMIT_EXCEEDED = 93,
  /*
   *The payer account is not a special account(account 0.0.55)
   */
  PROTO__RESPONSE_CODE_ENUM__NOT_SPECIAL_ACCOUNT = 94,
  /*
   * Negative gas was offered in smart contract call
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_NEGATIVE_GAS = 95,
  /*
   * Negative value / initial balance was specified in a smart contract call / create
   */
  PROTO__RESPONSE_CODE_ENUM__CONTRACT_NEGATIVE_VALUE = 96,
  /*
   * Failed to update fee file
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_FEE_FILE = 97,
  /*
   * Failed to update exchange rate file
   */
  PROTO__RESPONSE_CODE_ENUM__INVALID_EXCHANGE_RATE_FILE = 98,
  /*
   * Payment tendered for contract local call cannot cover both the fee and the gas
   */
  PROTO__RESPONSE_CODE_ENUM__INSUFFICIENT_LOCAL_CALL_GAS = 99,
  /*
   * Entities with Entity ID below 1000 are not allowed to be deleted
   */
  PROTO__RESPONSE_CODE_ENUM__ENTITY_NOT_ALLOWED_TO_DELETE = 100,
  /*
   * Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2) account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102), ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate (0.0.112).
   */
  PROTO__RESPONSE_CODE_ENUM__AUTHORIZATION_FAILED = 101,
  /*
   * Fee Schedule Proto uploaded but not valid (append or update is required)
   */
  PROTO__RESPONSE_CODE_ENUM__FILE_UPLOADED_PROTO_INVALID = 102,
  /*
   * Fee Schedule Proto uploaded but not valid (append or update is required)
   */
  PROTO__RESPONSE_CODE_ENUM__FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK = 103,
  /*
   * Fee Schedule Proto File Part uploaded
   */
  PROTO__RESPONSE_CODE_ENUM__FEE_SCHEDULE_FILE_PART_UPLOADED = 104,
  /*
   * The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage
   */
  PROTO__RESPONSE_CODE_ENUM__EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED = 105,
  /*
   * Contract permanent storage exceeded the currently allowable limit
   */
  PROTO__RESPONSE_CODE_ENUM__MAX_CONTRACT_STORAGE_EXCEEDED = 106
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__RESPONSE_CODE_ENUM)
} Proto__ResponseCodeEnum;

/* --- messages --- */

/* --- per-message closures --- */


/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    proto__response_code_enum__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ResponseCode_2eproto__INCLUDED */

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: TransactionReceipt.proto */

#ifndef PROTOBUF_C_TransactionReceipt_2eproto__INCLUDED
#define PROTOBUF_C_TransactionReceipt_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "ResponseCode.pb-c.h"
#include "ExchangeRate.pb-c.h"

typedef struct _Proto__TransactionReceipt Proto__TransactionReceipt;


/* --- enums --- */


/* --- messages --- */

/*
 * The consensus result for a transaction, which might not be currently known, or may  succeed or fail. 
 */
struct  _Proto__TransactionReceipt
{
  ProtobufCMessage base;
  /*
   * whether the transaction succeeded or failed (or is unknown)
   */
  Proto__ResponseCodeEnum status;
  /*
   *  The account ID, if a new account was created
   */
  Proto__AccountID *accountid;
  /*
   * The file ID, if a new file was created
   */
  Proto__FileID *fileid;
  /*
   * The contract ID, if a new smart contract instance was created
   */
  Proto__ContractID *contractid;
  /*
   * exchange rate set of Hbar to cents (USD)
   */
  Proto__ExchangeRateSet *exchangerate;
};
#define PROTO__TRANSACTION_RECEIPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__transaction_receipt__descriptor) \
    , PROTO__RESPONSE_CODE_ENUM__OK, NULL, NULL, NULL, NULL }


/* Proto__TransactionReceipt methods */
void   proto__transaction_receipt__init
                     (Proto__TransactionReceipt         *message);
size_t proto__transaction_receipt__get_packed_size
                     (const Proto__TransactionReceipt   *message);
size_t proto__transaction_receipt__pack
                     (const Proto__TransactionReceipt   *message,
                      uint8_t             *out);
size_t proto__transaction_receipt__pack_to_buffer
                     (const Proto__TransactionReceipt   *message,
                      ProtobufCBuffer     *buffer);
Proto__TransactionReceipt *
       proto__transaction_receipt__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__transaction_receipt__free_unpacked
                     (Proto__TransactionReceipt *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__TransactionReceipt_Closure)
                 (const Proto__TransactionReceipt *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__transaction_receipt__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_TransactionReceipt_2eproto__INCLUDED */

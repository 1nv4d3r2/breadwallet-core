/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Query.proto */

#ifndef PROTOBUF_C_Query_2eproto__INCLUDED
#define PROTOBUF_C_Query_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "GetByKey.pb-c.h"
#include "GetBySolidityID.pb-c.h"
#include "ContractCallLocal.pb-c.h"
#include "ContractGetInfo.pb-c.h"
#include "ContractGetBytecode.pb-c.h"
#include "ContractGetRecords.pb-c.h"
#include "CryptoGetAccountBalance.pb-c.h"
#include "CryptoGetAccountRecords.pb-c.h"
#include "CryptoGetInfo.pb-c.h"
#include "CryptoGetClaim.pb-c.h"
#include "CryptoGetStakers.pb-c.h"
#include "FileGetContents.pb-c.h"
#include "FileGetInfo.pb-c.h"
#include "TransactionGetReceipt.pb-c.h"
#include "TransactionGetRecord.pb-c.h"
#include "TransactionGetFastRecord.pb-c.h"

typedef struct _Proto__Query Proto__Query;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTO__QUERY__QUERY__NOT_SET = 0,
  PROTO__QUERY__QUERY_GET_BY_KEY = 1,
  PROTO__QUERY__QUERY_GET_BY_SOLIDITY_ID = 2,
  PROTO__QUERY__QUERY_CONTRACT_CALL_LOCAL = 3,
  PROTO__QUERY__QUERY_CONTRACT_GET_INFO = 4,
  PROTO__QUERY__QUERY_CONTRACT_GET_BYTECODE = 5,
  PROTO__QUERY__QUERY_CONTRACT_GET_RECORDS = 6,
  PROTO__QUERY__QUERY_CRYPTOGET_ACCOUNT_BALANCE = 7,
  PROTO__QUERY__QUERY_CRYPTO_GET_ACCOUNT_RECORDS = 8,
  PROTO__QUERY__QUERY_CRYPTO_GET_INFO = 9,
  PROTO__QUERY__QUERY_CRYPTO_GET_CLAIM = 10,
  PROTO__QUERY__QUERY_CRYPTO_GET_PROXY_STAKERS = 11,
  PROTO__QUERY__QUERY_FILE_GET_CONTENTS = 12,
  PROTO__QUERY__QUERY_FILE_GET_INFO = 13,
  PROTO__QUERY__QUERY_TRANSACTION_GET_RECEIPT = 14,
  PROTO__QUERY__QUERY_TRANSACTION_GET_RECORD = 15,
  PROTO__QUERY__QUERY_TRANSACTION_GET_FAST_RECORD = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__QUERY__QUERY)
} Proto__Query__QueryCase;

/*
 * A single query, which is sent from the client to the node. This includes all possible queries. Each Query should not have more than 50 levels. 
 */
struct  _Proto__Query
{
  ProtobufCMessage base;
  Proto__Query__QueryCase query_case;
  union {
    /*
     * Get all entities associated with a given key
     */
    Proto__GetByKeyQuery *getbykey;
    /*
     * Get the IDs in the format used in transactions, given the format used in Solidity
     */
    Proto__GetBySolidityIDQuery *getbysolidityid;
    /*
     * Call a function of a smart contract instance
     */
    Proto__ContractCallLocalQuery *contractcalllocal;
    /*
     * Get information about a smart contract instance
     */
    Proto__ContractGetInfoQuery *contractgetinfo;
    /*
     * Get bytecode used by a smart contract instance
     */
    Proto__ContractGetBytecodeQuery *contractgetbytecode;
    /*
     * Get Records of the contract instance
     */
    Proto__ContractGetRecordsQuery *contractgetrecords;
    /*
     * Get the current balance in a cryptocurrency account
     */
    Proto__CryptoGetAccountBalanceQuery *cryptogetaccountbalance;
    /*
     * Get all the records that currently exist for transactions involving an account
     */
    Proto__CryptoGetAccountRecordsQuery *cryptogetaccountrecords;
    /*
     * Get all information about an account
     */
    Proto__CryptoGetInfoQuery *cryptogetinfo;
    /*
     * Get a single claim from a single account (or null if it doesn't exist)
     */
    Proto__CryptoGetClaimQuery *cryptogetclaim;
    /*
     * Get all the accounts that proxy stake to a given account, and how much they proxy stake (not yet implemented in the current API)
     */
    Proto__CryptoGetStakersQuery *cryptogetproxystakers;
    /*
     * Get the contents of a file (the bytes stored in it)
     */
    Proto__FileGetContentsQuery *filegetcontents;
    /*
     * Get information about a file, such as its expiration date
     */
    Proto__FileGetInfoQuery *filegetinfo;
    /*
     * Get a receipt for a transaction (lasts 180 seconds)
     */
    Proto__TransactionGetReceiptQuery *transactiongetreceipt;
    /*
     * Get a record for a transaction (lasts 1 hour)
     */
    Proto__TransactionGetRecordQuery *transactiongetrecord;
    /*
     * Get a record for a transaction (lasts 180 seconds)
     */
    Proto__TransactionGetFastRecordQuery *transactiongetfastrecord;
  };
};
#define PROTO__QUERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__query__descriptor) \
    , PROTO__QUERY__QUERY__NOT_SET, {0} }


/* Proto__Query methods */
void   proto__query__init
                     (Proto__Query         *message);
size_t proto__query__get_packed_size
                     (const Proto__Query   *message);
size_t proto__query__pack
                     (const Proto__Query   *message,
                      uint8_t             *out);
size_t proto__query__pack_to_buffer
                     (const Proto__Query   *message,
                      ProtobufCBuffer     *buffer);
Proto__Query *
       proto__query__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__query__free_unpacked
                     (Proto__Query *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__Query_Closure)
                 (const Proto__Query *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Query_2eproto__INCLUDED */
